[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "carver-feeds-sdk"
version = "0.1.1"
description = "Python SDK for the Carver Feeds API - fetch, analyze, and query regulatory feed data"
readme = "README.md"
authors = [
    {name = "Carver Agents", email = "support@carveragents.ai"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Typing :: Typed",
]
keywords = [
    "carver",
    "feeds",
    "api",
    "regulations",
    "data",
    "sdk",
    "regulatory intelligence",
    "risk management",
    "real-time intelligence",
    "risk assessment",
    "compliance monitoring",
]
requires-python = ">=3.10"
dependencies = [
    "requests>=2.31.0,<3.0.0",
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "pyarrow>=12.0.0,<13.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "tqdm>=4.65.0,<5.0.0",
    "tabulate>=0.9.0,<1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "black>=23.7.0",
    "ruff>=0.0.285",
    "mypy>=1.4.1",
    "types-requests>=2.31.0",
    "types-tabulate>=0.9.0",
    "build>=0.10.0",
    "bumpversion>=0.6.0",
]

[project.urls]
Homepage = "https://github.com/carveragents/carver-feeds-sdk"
Documentation = "https://github.com/carveragents/carver-feeds-sdk/blob/master/README.md"
Repository = "https://github.com/carveragents/carver-feeds-sdk"
Issues = "https://github.com/carveragents/carver-feeds-sdk/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["carver_feeds*"]

[tool.setuptools.package-data]
carver_feeds = ["py.typed"]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["carver_feeds"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
